이제 타일맵을 업데이트해 봅시다. 그냥 직사각형을 그려서 만드는 것이 아닌, 이미지를 그려주세요. 지금 타일 크기가 50*50픽셀인데, 이 이미지의 타일은 크기가 다릅니다. 그것도 고려해야 합니다.

이제 새로운 적을 생성해봅시다. 이 새로운 적은 똑같이 플레이어를 추격합니다. 
하지만 중력의 받지 않으며 날아다니는 기존 적과는 다르게 이번 적은 플레이어와 같은 방식으로 이동합니다. 즉, 중력의 영향을 받으며 점프를 하는 적입니다.
이번 적은 중력의 영향과 점프 때문에 길찾기가 더 까다로울 것 같습니다.


                    print(self.facing_left, a, self.rect.x, self.speed * delta_time)
                    a+=1

플레이어의 왼쪽 또는 오른쪽을 목표로 정함
유클리드 거리로 가까운 쪽을 목표로 정함
이동 때마다 장애물을 피해서 가는 것 때문에 유클리드 거리가 짧은 방향이 계속 바뀜
따라서 우왕좌왕하며 길찾기를 하는 것을 의도치 않게 구현할 수 있음

일단 전체 경로를 재구성하지 말고 다음 노드만 찾은 다음 그 방향으로 이동
그 노드에 도착했으면, 또는 플레이어가 움직였으면 경로 재구성
만약 새로운 플레이어 위치가 그 전 위치와 같다면(그리드 포지션 기반으로) 다시 계산하지 않음
이 방법을 더 효과적으로 하기 위해 목표점을 2곱하기2 타일, 플레이어의 상하좌우 등으로 하는 것도 좋음
그 목표점 아무 타일이나 도착하도록 한 뒤 그리드 포지션 기반을 2곱하기2타일 등으로 바꿈



